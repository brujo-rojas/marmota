$themes: (
  '': (
    background: rgba(245, 245, 245, 1),
    //grey 100
    bgChild: rgba(0, 0, 0, 0.04),
    bgGrandchild: rgba(0, 0, 0, 0.08),
    input_bg: rgba(245, 245, 245, 1),
    textarea_bg: rgba(255, 241, 118, 0.3),
    nav_input_color: #12161d,
    nav_input_bg: rgba(245, 245, 245, 0.8),
    //grey 100
    color: white,
    tableColor: #1a1f2a,
    tableEditBackground: rgba(255, 241, 118, 0.4),
    tableEditBackgroundDarken: rgba(255, 241, 118, 0.3),
    tableBorderColor: rgba(100, 100, 100, 0.5),
    insetShadowColor: rgba(0, 0, 0, 0.3),
    accent: #e76f51,
    scroll: #879e95,
    lighten_4: #879e95,
    lighten_3: #5e8b7b,
    lighten_2: #367660,
    lighten_1: #1b694e,
    primary: #0b5b40,
    darken_1: #034d34,
    darken_2: #044029,
    darken_3: #00321e,
    darken_4: #001b02,
  ),
  '.dark-theme': (
    background: #313b50,
    bgChild: #293243,
    bgGrandchild: #222837,
    input_bg: #293243,
    textarea_bg: rgba(255, 241, 118, 0.1),
    nav_input_color: white,
    nav_input_bg: #313b50,
    color: white,
    tableColor: white,
    tableEditBackground: rgba(255, 241, 118, 0.1),
    tableEditBackgroundDarken: rgba(255, 241, 118, 0.2),
    tableBorderColor: #1a1f2a,
    insetShadowColor: rgba(0, 0, 0, 0.3),
    accent: rgba(56, 142, 60, 1),
    scroll: #506083,
    //green 700
    lighten_4: #506083,
    lighten_3: #485776,
    lighten_2: #404e69,
    lighten_1: #39445d,
    primary: #313b50,
    darken_1: #293243,
    darken_2: #222837,
    darken_3: #1a1f2a,
    darken_4: #12161d,
  ),
) !default;

@each $nameTheme, $theme in $themes {
  .marmota#{$nameTheme} {
    &.zebra-group {
      .table {
        .t-col-group:nth-child(2n) .t-col {
          background-color: rgba(0, 0, 0, 0.05); //mapGet($theme, bgChild);
        }
      }

      .header-item-group {
        &:nth-child(2n) {
          background-color: mapGet($theme, darken_2);
          .header-item-group-top {
            background-color: mapGet($theme, darken_3);
          }
        }
        .active {
          background-color: mapGet($theme, lighten_3);
          box-shadow: 0px 0px 1px 2px mapGet($theme, accent);
        }
      }
    }

    .corner {
      color: mapGet($theme, color);
      background: mapGet($theme, darken_2);
      border-right: 1px solid mapGet($theme, darken_3);
      border-bottom: 1px solid mapGet($theme, darken_4);
      &.right {
        border-left: 1px solid mapGet($theme, darken_3);
      }
      .v-input--checkbox {
        margin-left: -6px !important;
      }
    }

    .table-container {
      background-color: mapGet($theme, background);

      &::-webkit-scrollbar-thumb {
        background-color: mapGet($theme, scroll);
        border: solid 1px mapGet($theme, scroll);
      }

      &::-webkit-scrollbar-thumb:hover {
        //box-shadow: 0 0 2px 1px mapGet($theme,accent); // rgba(0, 0, 0, 0.2);
      }

      &::-webkit-scrollbar-track {
        //background-color: mapGet($theme, darken_2);
      }
    }

    header {
      background-color: mapGet($theme, darken_1);
      color: mapGet($theme, color);
      border-bottom: 1px solid mapGet($theme, darken_4);
      box-shadow: 0px -5px 5px 7px mapGet($theme, insetShadowColor);
    }

    .header-item-group {
      border-right: 2px solid mapGet($theme, darken_4);

      .header-item-group-top {
        //background-color: mapGet($theme, darken_2);
      }

      &.is-actual,
      &.is-active {
        background-color: mapGet($theme, darken_3);
      }
    }

    .header-item {
      border-right: 1px solid mapGet($theme, darken_3);
      &.white {
        span {
          background: white;
          color: mapGet($theme, darken_3);
          font-weight: bold;
        }
      }
    }

    nav {
      background-color: mapGet($theme, darken_1);
      color: mapGet($theme, color);

      &.table-mode {
        .t-row {
          border-bottom: 1px solid mapGet($theme, darken_3);
          border-right: 1px solid mapGet($theme, darken_3);
          &.bottom-fixed {
            border-top: 1px solid mapGet($theme, darken_4);
            background-color: mapGet($theme, darken_2);
          }
          .t-col {
            color: mapGet($theme, color);
            border-right: 1px solid mapGet($theme, darken_3);

            input[type='text'],
            input[type='password'],
            input[type='number'] {
              color: mapGet($theme, color);
              background-color: mapGet($theme, lighten_3);
              border: 1px solid mapGet($theme, darken_3);

              &[disabled] {
                background: transparent !important;
                border-color: transparent !important;
                color: unset !important;
              }

              &.full {
                &:focus {
                  border: 1px solid mapGet($theme, darken_4);
                  box-shadow: inset 0px 0px 3px mapGet($theme, darken_4);
                }
              }

              &:active,
              &:hover,
              &:focus {
                background-color: mapGet($theme, lighten_4);
                border: 1px solid mapGet($theme, darken_4);
              }
            }
          }
        }
      }

      &:not(.nav-right) {
        border-right: 1px solid mapGet($theme, darken_3);
        box-shadow: 5px 0px 5px mapGet($theme, insetShadowColor);
      }

      &.nav-right {
        border-left: 1px solid mapGet($theme, darken_3);
        box-shadow: -5px 0px 5px mapGet($theme, insetShadowColor);
      }

      .nav-item-group {
        &.bottom-fixed {
          border-top: 1px solid mapGet($theme, darken_4);
          background-color: mapGet($theme, darken_2);
        }
        & > .nav-item-group:not(.is-inset) {
          .nav-item {
            background-color: mapGet($theme, darken_2);
          }
          & > .nav-item-group:not(.is-inset) {
            .nav-item {
              background-color: mapGet($theme, darken_3);
              border-color: mapGet($theme, darken_4);
            }
          }
        }
      }

      .nav-item-group:not(.is-inset) {
        & > .nav-item {
          &.bg-edit {
            background-color: mapGet($theme, tableEditBackgroundDarken);
          }
        }
        &.nav-item-group-zebra:nth-child(2n) > .nav-item {
          background-color: mapGet($theme, darken_2);
        }
      }

      .nav-item {
        border-bottom: 1px solid mapGet($theme, darken_3);
        &.bg-darker {
          background-color: mapGet($theme, darken_4);
        }
        &.bg-dark {
          background-color: mapGet($theme, darken_3);
        }

        .v-icon {
          color: mapGet($theme, color);
        }

        .nav-item-label {
          color: mapGet($theme, color);
        }

        input[type='text'],
        input[type='password'],
        input[type='number'] {
          color: mapGet($theme, nav_input_color);
          background-color: mapGet($theme, nav_input_bg);
          border: 1px solid transparentize(mapGet($theme, color), 0.4);

          &[disabled] {
            background: transparent !important;
            border-color: transparent !important;
            color: inherit;
          }

          &.full {
            &.focus {
              border: 1px solid mapGet($theme, darken_4);
              box-shadow: inset 0px 0px 3px mapGet($theme, darken_4);
            }
          }

          &:active,
          &:hover,
          &:focus {
            background-color: mapGet($theme, nav_input_bg);
            border: 1px solid transparentize(mapGet($theme, color), 0.2);
          }
        }
      }
    }

    .table .t-row-group:not(.is-inset) {
      & > .t-row.bg-edit {
        background-color: mapGet($theme, tableEditBackground);
      }
    }

    .table {
      .bottom-fixed {
        background-color: mapGet($theme, background);
        border-top: 1px solid mapGet($theme, tableBorderColor);
      }

      .t-row {
        border-bottom: 1px solid mapGet($theme, tableBorderColor);
        border-right: 1px solid mapGet($theme, tableBorderColor);

        &:hover {
          box-shadow: inset 0px 4px 2px -2px mapGet($theme, accent),
            inset 0px -4px 2px -2px mapGet($theme, accent);
        }

        .t-col {
          color: mapGet($theme, tableColor);
          border-right: 1px solid mapGet($theme, tableBorderColor);

          input[type='text'],
          input[type='password'],
          input[type='number'] {
            background-color: mapGet($theme, input_bg);
            border: 1px solid transparentize(mapGet($theme, tableColor), 0.55);
            color: mapGet($theme, tableColor);

            &[disabled] {
              color: mapGet($theme, tableColor);
              background: transparent !important;
              border-color: transparent !important;
            }

            &.full {
              &:focus {
                border: 1px solid mapGet($theme, darken_3);
                box-shadow: inset 0px 0px 3px mapGet($theme, darken_3);
              }
            }
            &:active,
            &:hover,
            &:focus {
              background-color: mapGet($theme, input_bg);
              border: 1px solid transparentize(mapGet($theme, tableColor), 0.2);
            }
          }

          textarea {
            background-color: mapGet($theme, textarea_bg);
            border: 1px solid transparentize(mapGet($theme, tableColor), 0.55);
            color: mapGet($theme, tableColor);

            &[disabled] {
              color: mapGet($theme, tableColor);
              background: transparent !important;
              border-color: transparent !important;
            }

            &:active,
            &:hover,
            &:focus {
              border: 1px solid transparentize(mapGet($theme, tableColor), 0.2);
            }
          }
        }
      }
      .t-row-group {
        & > .t-row-group:not(.is-inset) {
          .t-row:not(.bg-edit) {
            background-color: mapGet($theme, bgChild);
          }
          & > .t-row-group:not(.is-inset) {
            .t-row:not(.bg-edit) {
              background-color: mapGet($theme, bgGrandchild);
            }
          }
        }

        &.t-row-zebra:not(.is-inset):nth-child(2n) .t-row {
          background-color: mapGet($theme, bgChild);
        }

        &:not(.is-inset) .t-row-group.is-inset:last-child .t-row {
          border-bottom-width: 2px;
        }
      }
      .t-col-group {
        border-right: 2px solid mapGet($theme, bgGrandchild);
      }
    }
  }
}
